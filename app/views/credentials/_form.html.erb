<%= form_for [@user, @credential], :html=> {:onSubmit => "return encrypt();"} do |f| %>
  <% if @credential.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@credential.errors.count, "error") %> prohibited this credential from being saved:</h2>

      <ul>
      <% @credential.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :service %><br />
    <%= f.text_field :service %>
  </div>
  <div class="field">
    <%= f.label :username %><br />
    <%= f.text_field :username %>
  </div>
  <div class="field">
    <%= f.label :service_password, "Password to Encrypt" %><br />
    <%= f.text_field :service_password %>
  </div>
  <div class="field">
    <%= f.label :password, "Password Bucket Password" %><br />
    <%= f.password_field :password %>
  </div>
  <%= f.hidden_field :salt %>
  <div class="actions">
    <%= f.submit %>
  </div>
	<script>
	//  self.salt = make_salt if new_record?
	//  key = secure_hash("#{self.salt}--#{password}")
	//  self.crypted_password = symmetrically_encrypt(service_password, key)
	function encrypt() {
		var user_password = $('#credential_password').val();
		var credential_password = $('#credential_service_password').val();		
	  var now = new Date();
	  var salt = calcMD5(now.getTime()+"--"+user_password);
		var key = calcMD5(salt+"--"+user_password);
		var encrypted_credential_password = GibberishAES.enc(credential_password, key);
		$('#credential_service_password').val(encrypted_credential_password);
		$('#credential_salt').val(salt);
    return true;
	}	
	</script>
<% end %>
